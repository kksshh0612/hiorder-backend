server:
  port: 8080

spring:
  application:
    name: restaurant-service

  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DB_URL_RESTAURANT}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true
    open-in-view: false



  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.type.mapping: |
          test-message:com.kt.dto.MessagePayload
    properties:
      security.protocol: SASL_SSL
      sasl.mechanism: PLAIN
      sasl.jaas.config: >
        org.apache.kafka.common.security.plain.PlainLoginModule required
        username="$ConnectionString"
        password="${KAFKA_CONNECTION_STRING}";

openai:
  response:
    api:
      key: ${OPENAI_RESPONSE_API_KEY}
    url: 'https://api.openai.com/v1/responses'

  api:
    key: ${OPENAI_API_KEY}
  url: 'https://api.openai.com/v1/chat/completions'


springdoc:
  api-docs:
    path: /restaurant/v3/api-docs
  swagger-ui:
    path: /restaurant/swagger-ui.html
  use-root-path: true


azure:
  storage:
    account-name: team08sa
    account-key: ${AZURE_STORAGE_ACCOUNT_KEY}
    container-name: images